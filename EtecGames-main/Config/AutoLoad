<? php

namespace  Config ;

use  CodeIgniter \ Config \ AutoloadConfig ;

/ **
 * ------------------------------------------------- ------------------
 * CONFIGURAÇÃO DO AUTOLOADER
 * ------------------------------------------------- ------------------
 *
 * Este arquivo define os namespaces e mapas de classes para que o Autoloader
 * pode localizar os arquivos conforme necessário.
 *
 * NOTA: Se você usar uma chave idêntica em $ psr4 ou $ classmap, então
 * os valores neste arquivo sobrescreverão os valores da estrutura.
 * /
classe  Autoload  estende  AutoloadConfig
{
	/ **
	 * ------------------------------------------------- ------------------
	 * Namespaces
	 * ------------------------------------------------- ------------------
	 * Isso mapeia as localizações de quaisquer namespaces em seu aplicativo para
	 * sua localização no sistema de arquivos. Eles são usados ​​pelo autoloader
	 * para localizar arquivos na primeira vez em que forem instanciados.
	 *
	 * Os diretórios '/ app' e '/ system' já estão mapeados para você.
	 * você pode alterar o nome do namespace 'App' se desejar,
	 * mas isso deve ser feito antes de criar qualquer classe com namespace,
	 * caso contrário, você precisará modificar todas essas classes para que isso funcione.
	 *
	 * Protótipo:
	 * `` `
	 * $ psr4 = [
	 * 'CodeIgniter' => SYSTEMPATH,
	 * 'App' => APPPATH
	 *];
	 * `` `
	 * @var array <string, string>
	 * /
	public  $ psr4 = [
		APP_NAMESPACE => APPPATH , // Para namespace de aplicativo personalizado
		'Config'       => APPPATH . 'Config' ,
	];

	/ **
	 * ------------------------------------------------- ------------------
	 * Mapa da aula
	 * ------------------------------------------------- ------------------
	 * O mapa da classe fornece um mapa dos nomes das classes e seus exatos
	 * localização na unidade. As aulas carregadas desta maneira terão
	 * desempenho ligeiramente mais rápido porque eles não terão que ser
	 * pesquisado em um ou mais diretórios como fariam se eles
	 * estavam sendo carregados automaticamente por meio de um namespace.
	 *
	 * Protótipo:
	 * `` `
	 * $ classmap = [
	 * 'MyClass' => '/path/to/class/file.php'
	 *];
	 * `` `
	 * @var array <string, string>
	 * /
	public  $ classmap = [];

	/ **
	 * ------------------------------------------------- ------------------
	 * Arquivos
	 * ------------------------------------------------- ------------------
	 * A matriz de arquivos fornece uma lista de caminhos para arquivos __non-class__
	 * que será carregado automaticamente. Isso pode ser útil para operações de bootstrap
	 * ou para funções de carregamento.
	 *
	 * Protótipo:
	 * `` `
	 * $ files = [
	 * '/path/to/my/file.php',
	 *];
	 * `` `
	 * @var array <int, string>
	 * /
	public  $ files = [];
}
